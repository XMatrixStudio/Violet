openapi: 3.0.0
info:
  version: 2.0.0-dev
  title: Violet User System APIs
  description: Violet用户授权系统API列表
servers:
  - url: 'https://api.xmatrix.studio/violet/v2'
    description: XMatrix OAuth APIs
tags:
  - name: Verify
    description: 认证
  - name: Users
    description: 用户
  - name: Utils
    description: 工具
components:
  parameters:
    accessToken:
      name: accessToken
      in: query
      description: 用户令牌
      required: true
      schema:
        type: string
    userId:
      name: userId
      in: query
      description: 用户唯一ID
      required: true
      schema:
        type: number
    clientSecret:
      name: clientSecret
      in: query
      required: true
      description: 通过网站key加密的一段认证信息(10分钟后失效)。使用sdk生成
      schema:
        type: string
  responses:
    error:
      description: 权限错误
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: |
                  invalid_token - 用户令牌无效<br>
                  timeout_token - 用户令牌已过期<br>
                  invalid_secret - 网站认证信息无效<br> timeout_secret - 网站认证信息已过期<br>
                example: string
    expInfo:
      description: 获取用户等级信息成功
      content:
        application/json:
          schema:
            type: object
            properties:
              level:
                type: number
                description: 用户当前等级
                example: 12
              exp:
                type: number
                description: 用户当前经验
                example: 2378
              expMax:
                type: number
                description: 当前等级经验上限
                example: 4000
              achievement:
                type: array
                items:
                  type: number
                description: 用户在该网站已获得的成就ID，注意，不同网站成就ID之间没有任何联系
                example:
                  - 598ee9df75d8ad07f2f6f0d1
                  - 134ee9432d2f2af2d3f6f0d1
paths:
  /Verify/Authorize:
    get:
      tags:
        - Verify
      summary: |
        跳转到violet登陆
      parameters:
        - name: responseType
          in: query
          description: |
            授权类型，此值固定为“code”
          required: true
          schema:
            type: string
        - name: clientId
          in: query
          required: true
          description: |
            网站ID，如果错误将无法返回网站。
          schema:
            type: string
        - name: state
          in: query
          description: >
            client端的状态值。用于第三方应用防止CSRF攻击，成功授权后回调时会原样带回。请务必严格按照流程检查用户与state参数状态的绑定。
          required: true
          schema:
            type: string
        - name: redirectUri
          in: query
          description: |
            回调地址，成功授权后回调时会原样带回
          required: false
          schema:
            type: string
        - name: quickLogin
          in: query
          description: |
            是否使用快速登陆(如果用户已经授权过该网站，并且Violet处于已登录状态那么可以直接跳过授权页面，直接登陆)
          required: false
          schema:
            type: boolean
        - name: reLogin
          in: query
          description: |
            是否强制重新登陆 (用于切换登陆账号，会自动将当前用户的Violet置于未登录状态)
          required: false
          schema:
            type: boolean
        - name: display
          in: query
          description: |
            用于展示的样式。不传则自动适配<br> pc - 展示为pc端下的样式。<br> mobile - 展示为mobile端下的样式。
          required: false
          schema:
            type: boolean
      responses:
        '301':
          description: |
            用户授权成功，跳转到预先在violet留下的回调地址，认证成功后，再由网站服务器自行跳转
          content:
            回调参数:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      Authorization code，注意此code会在1分钟内过期
                    example: string
                  state:
                    type: string
                    description: |
                      client端的状态值，原样带回
                    example: string
                  redirect_uri:
                    type: string
                    description: |
                      回调地址，原样带回
                    example: string
  /Verify/Token:
    get:
      tags:
        - Verify
      summary: 获取accessToken
      parameters:
        - name: grantType
          in: query
          description: |
            授权类型，此值固定为“authorization_code”
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: |
            用户确认授权后返回的Authorization code，注意此code会在1分钟内过期。
          required: true
          schema:
            type: string
        - name: clientSecret
          in: query
          required: true
          description: |
            通过网站key加密的一段认证信息(10分钟后失效)。使用sdk生成
          schema:
            type: string
      responses:
        '200':
          description: |
            认证成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: |
                      访问令牌(有效生命周期14天)，重新获取后上一个令牌立即失效
                    example: string
                  userId:
                    type: number
                    description: |
                      用户唯一ID
                    example: 598ee9df75d8ad07f2f6f0d1
        '400':
          description: |
            获取token失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: >
                      invalid_type - 请求类型错误<br> invalid_code - Authorization
                      code 不合法<br> timeout_code - Authorization code 已过期<br>
                      invalid_id - 网站id不存在<br> invalid_secret - 网站认证信息无效<br>
                    example: string
  /Users/Basedata:
    get:
      tags:
        - Users
      summary: 获取用户基本信息
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/clientSecret'
      responses:
        '200':
          description: 获取用户基本信息成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: 用户有效邮箱
                    example: zhenlychen@foxmail.com
                  name:
                    type: string
                    description: 用户唯一名称
                    example: zhenlychen
                  detail:
                    type: object
                    description: 用户个性信息
                    properties:
                      web:
                        type: string
                        description: 个人主页
                        example: blog.zhenly.cn
                      phone:
                        type: number
                        description: 手机号码
                        example: 13300002200
                      info:
                        type: string
                        description: 个人简介
                        example: 'Hello, world'
                      sex:
                        type: number
                        description: |
                          0 - 未确定<br> 1 - 男<br> 2 - 女<br> 3 - 其他
                        example: 1
                      birthDate:
                        type: string
                        format: date
                        description: 出生日期
                        example: '2017-10-12'
                      location:
                        type: string
                        description: 所在地
                        example: GuangZhou
                      avatar:
                        type: string
                        description: 用户头像
                        example: 'https://example.com/fjiewrsdawd.png'
        '401':
          $ref: '#/components/responses/error'
  /Users/Achievements:
    get:
      tags:
        - Users
      summary: 获取用户成就等级信息
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/clientSecret'
      responses:
        '200':
          $ref: '#/components/responses/expInfo'
        '400':
          description: 参数错误，获取用户等级信息失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: invalid_user - 用户不存在
                    example: invalid_user
        '401':
          $ref: '#/components/responses/error'
    post:
      tags:
        - Users
      summary: 新建用户成就
      parameters:
        - $ref: '#/components/parameters/clientSecret'
        - name: name
          in: query
          required: true
          description: 成就名称
          schema:
            type: string
        - name: img
          in: query
          description: 成就图标
          schema:
            type: string
            format: base64
      responses:
        '201':
          description: 新建成就成功
        '400':
          description: 参数错误，新建成就失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      duplicate_name - 成就重复<br>
                      max_achievements - 成就数量达到上限<br>
                    example: duplicate_name
        '401':
          $ref: '#/components/responses/error'
  /Users/Achievements/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: 成就id
        schema:
          type: number
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/clientSecret'
    put:
      tags:
        - Users
      summary: 增加用户成就
      description: '增加用户成就,返回增加后的用户成就等级信息'
      responses:
        '201':
          $ref: '#/components/responses/expInfo'
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br> invalid_achievement - 成就ID不存在
                    example: string
        '401':
          $ref: '#/components/responses/error'
    delete:
      tags:
        - Users
      summary: 删除用户成就
      description: '删除用户成就,返回增加后的用户成就等级信息'
      responses:
        '204':
          $ref: '#/components/responses/expInfo'
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br> invalid_achievement - 成就ID不存在
                    example: string
        '401':
          $ref: '#/components/responses/error'
  /Users/Followers:
    get:
      tags:
        - Users
      summary: 获取用户的关注者列表
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/clientSecret'
      responses:
        '200':
          description: 获取用户的关注者列表成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  followers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: 用户名
                          example: zhenlychen
                        nickName:
                          type: string
                          description: 昵称
                          example: Zhenly
                        avatar:
                          type: string
                          description: 用户头像
                          example: 'https://example.com/598ee9df75d8ad07f2f6f0d1.png'
                        level:
                          type: number
                          description: 用户成就等级
                          example: 11
                        sex:
                          type: number
                          description: |
                            0 - 未确定<br> 1 - 男<br> 2 - 女<br> 3 - 其他
                          example: 1
                        info:
                          type: string
                          description: 个人简介
                          example: 'Hello, world'
                        interFollow:
                          type: boolean
                          description: 是否互相关注
                          example: true
                    description: |
                      关注者信息列表
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br>
                    example: string
        '401':
          $ref: '#/components/responses/error'
  /Users/Following:
    get:
      tags:
        - Users
      summary: 获取用户关注的人的列表
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/clientSecret'
      responses:
        '200':
          description: 获取用户关注的人的列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  followers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: 用户名
                          example: zhenlychen
                        nickName:
                          type: string
                          description: 昵称
                          example: Zhenly
                        avatar:
                          type: string
                          description: 用户头像
                          example: 'https://example.com/598ee9df75d8ad07f2f6f0d1.png'
                        level:
                          type: number
                          description: 用户成就等级
                          example: 11
                        sex:
                          type: number
                          description: |
                            0 - 未确定<br> 1 - 男<br> 2 - 女<br> 3 - 其他
                          example: 1
                        info:
                          type: string
                          description: 个人简介
                          example: 'Hello, world'
                        interFollow:
                          type: boolean
                          description: 是否互相关注
                          example: true
                    description: |
                      关注者信息列表
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br>
                    example: string
        '401':
          $ref: '#/components/responses/error'
  /Users/Following/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: 关注的用户id
        schema:
          type: number
      - $ref: '#/components/parameters/accessToken'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/clientSecret'
    put:
      tags:
        - Users
      summary: 关注用户
      responses:
        '201':
          description: 关注用户成功
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br> invalid_follower - 关注目标用户不存在
                    example: string
        '401':
          $ref: '#/components/responses/error'
    delete:
      tags:
        - Users
      summary: 取消关注用户
      responses:
        '204':
          description: 取消关注用户成功
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_user - 用户不存在<br> invalid_follower - 关注目标用户不存在
                    example: string
        '401':
          $ref: '#/components/responses/error'
  /Utils/Secret:
    get:
      tags:
        - Utils
      summary: 生成clientSecret
      description: clientSecret推荐通过SDK生成，如果你的平台上没有对应的SDK可以使用此API生成，同样只有10分钟有效期。
      parameters:
        - name: client_id
          in: query
          description: 网站ID
          required: true
          schema:
            type: string
        - name: client_key
          in: query
          description: 网站KEY，注意保管网站Key，建议定时更改，以防泄露导致恶意请求被封号。
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientSecret:
                    type: string
                    example: string
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      invalid_id - 网站ID不存在<br> invalid_id - 网站key不正确
                    example: string
